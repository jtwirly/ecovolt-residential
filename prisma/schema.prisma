//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("SERVER_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserStatus {
  INVITED
  VERIFIED
}

/// @@auth
/// @@allow('all', auth().id == this.id)
/// @@allow('all', auth().globalRole == 'ADMIN')
/// @@allow('create', globalRole != 'ADMIN')
/// @@allow('read', true)
model User {
  id                          String                       @id() @default(uuid())
  name                        String?
  email                       String?                      @unique()
  pictureUrl                  String?                      @default("https://i.imgur.com/ZdJSK3Y.jpeg")
  tokenInvitation             String?
  stripeCustomerId            String?
  status                      UserStatus                   @default(VERIFIED)
  globalRole                  String                       @default("USER")
  /// @password
  /// @omit
  password                    String?
  createdAt                   DateTime                     @default(now())
  updatedAt                   DateTime                     @default(now()) @updatedAt()
  pwaSubscriptions            PwaSubscription[]            @relation("user")
  energyUsages                EnergyUsage[]                @relation("user")
  renewableEnergys            RenewableEnergy[]            @relation("user")
  smartDevices                SmartDevice[]                @relation("user")
  subscriptions               Subscription[]               @relation("user")
  energySavingGoals           EnergySavingGoal[]           @relation("user")
  evChargings                 EvCharging[]                 @relation("user")
  energySavingRecommendations EnergySavingRecommendation[] @relation("user")
}

/// @@allow('all', true)
model EnergyUsage {
  id          String   @id() @default(uuid())
  timestamp   String?
  consumption String?
  unit        String?
  userId      String
  user        User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model RenewableEnergy {
  id               String   @id() @default(uuid())
  sourceType       String?
  capacity         String?
  installationDate String?
  userId           String
  user             User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model SmartDevice {
  id          String   @id() @default(uuid())
  deviceName  String?
  deviceType  String?
  status      String?
  lastUpdated String?
  userId      String
  user        User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model EnergyMarket {
  id           String   @id() @default(uuid())
  marketName   String?
  currentPrice String?
  currency     String?
  lastUpdated  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model Subscription {
  id        String   @id() @default(uuid())
  planName  String?
  startDate String?
  endDate   String?
  status    String?
  userId    String
  user      User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model EnergySavingGoal {
  id                String   @id() @default(uuid())
  targetConsumption String?
  startDate         String?
  endDate           String?
  status            String?
  userId            String
  user              User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model EvCharging {
  id             String   @id() @default(uuid())
  vehicleModel   String?
  chargingStart  String?
  chargingEnd    String?
  energyConsumed String?
  userId         String
  user           User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model EnergySavingRecommendation {
  id                 String   @id() @default(uuid())
  recommendationText String?
  potentialSavings   String?
  userId             String
  user               User?    @relation(fields: [userId], references: [id], name: "user")
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now()) @updatedAt()
}

/// @@allow('all', true)
model PwaSubscription {
  id        String   @id() @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
  userId    String
  user      User     @relation(fields: [userId], references: [id], name: "user")
}
