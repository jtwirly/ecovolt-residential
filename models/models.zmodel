enum UserStatus {
    INVITED
    VERIFIED
}

model User {
    id                          String                       @id @default(uuid())
    name                        String?
    email                       String?                      @unique
    pictureUrl                  String?                      @default('https://i.imgur.com/ZdJSK3Y.jpeg')
    tokenInvitation             String?

    stripeCustomerId            String?

    status                      UserStatus                   @default(VERIFIED)

    // this is the role of the user for the application
    globalRole                  String                       @default('USER')
    password                    String?                      @password @omit
    createdAt                   DateTime                     @default(now())
    updatedAt                   DateTime                     @updatedAt @default(now())

    pwaSubscriptions            PwaSubscription[]            @relation("user")

    energyUsages                EnergyUsage[]                @relation("user")
    renewableEnergys            RenewableEnergy[]            @relation("user")
    smartDevices                SmartDevice[]                @relation("user")
    subscriptions               Subscription[]               @relation("user")
    energySavingGoals           EnergySavingGoal[]           @relation("user")
    evChargings                 EvCharging[]                 @relation("user")
    energySavingRecommendations EnergySavingRecommendation[] @relation("user")

    @@auth()
    @@allow("all", auth().id == this.id)
    @@allow('all', auth().globalRole == 'ADMIN')

    //we only allow that user to register if they don't create an admin role
    @@allow("create", globalRole != 'ADMIN')
    @@allow("read", true)
}

model EnergyUsage {

    id          String   @id @default(uuid())
    timestamp   String?
    consumption String?
    unit        String?

    userId      String
    user        User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model RenewableEnergy {

    id               String   @id @default(uuid())
    sourceType       String?
    capacity         String?
    installationDate String?

    userId           String
    user             User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt        DateTime @default(now())
    updatedAt        DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model SmartDevice {

    id          String   @id @default(uuid())
    deviceName  String?
    deviceType  String?
    status      String?
    lastUpdated String?

    userId      String
    user        User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model EnergyMarket {

    id           String   @id @default(uuid())
    marketName   String?
    currentPrice String?
    currency     String?
    lastUpdated  String?

    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model Subscription {

    id        String   @id @default(uuid())
    planName  String?
    startDate String?
    endDate   String?
    status    String?

    userId    String
    user      User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model EnergySavingGoal {

    id                String   @id @default(uuid())
    targetConsumption String?
    startDate         String?
    endDate           String?
    status            String?

    userId            String
    user              User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model EvCharging {

    id             String   @id @default(uuid())
    vehicleModel   String?
    chargingStart  String?
    chargingEnd    String?
    energyConsumed String?

    userId         String
    user           User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model EnergySavingRecommendation {

    id                 String   @id @default(uuid())
    recommendationText String?
    potentialSavings   String?

    userId             String
    user               User?    @relation(fields: [userId], references: [id], name: "user")

    createdAt          DateTime @default(now())
    updatedAt          DateTime @updatedAt @default(now())
    @@allow("all", true)
}

model PwaSubscription {
    id        String   @id @default(uuid())
    content   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt @default(now())

    userId    String   @default(auth().id)
    user      User     @relation(fields: [userId], references: [id], name: 'user')

    @@allow("all", true)
}

